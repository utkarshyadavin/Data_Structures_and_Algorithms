#include <iostream>
using namespace std;


//Structure of BSTNode with data and two pointer fields
struct BstNode {
int data ; 
BstNode* right ; 
BstNode* left ; 
};



// Code to generate a new BSTNode with given data and setting 
//the left and the right pointers as null
BstNode* GetnewNode(int data) {
BstNode* newNode = new BstNode() ; 
newNode->data = data ; 
newNode->left = NULL ;
newNode->right = NULL ; 
return newNode ; 
}



// Inserting a new node into the binary dearch tree with the given value and setting up the left and 
// right child accordingly.

BstNode* Insert(BstNode* root , int data){
if(root==NULL) //empty tree
root = GetnewNode(data) ; 
else if (data < root->data){
root->left = Insert(root->left , data) ; 
}
else {
root->right = Insert(root->right , data) ; 
}
return root ; 
}



// Searching for a node with a given value in the given BST.
// If the node with the given value is found , it returns true else returns false.

bool Search(BstNode* root , int data){
if(root == NULL) return false ; 
else if (root->data == data)
return true ; 
else if (data<root->data)
Search(root->left , data); 
else 
Search(root->right , data); 
}



int main() {
	
	
BstNode* root  = NULL ; 
root = Insert(root , 10) ; 
root = Insert(root , 15) ; 
root = Insert(root , 12) ; 
	
cout<<Search(root ,10)<<endl ; 
cout<<Search(root ,11)<<endl ; 
}